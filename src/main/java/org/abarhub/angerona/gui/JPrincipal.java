/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.abarhub.angerona.gui;

import java.io.IOException;
import java.security.*;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import org.abarhub.angerona.security.KeyStoreHashException;
import org.abarhub.angerona.security.Tools;
import org.abarhub.angerona.security.Traitement;
import org.apache.commons.codec.DecoderException;
import org.bouncycastle.crypto.DataLengthException;
import org.bouncycastle.crypto.InvalidCipherTextException;
import org.slf4j.LoggerFactory;
import org.slf4j.*;

/**
 *
 * @author abarret
 */
public class JPrincipal extends javax.swing.JFrame {

    final static Logger logger = LoggerFactory.getLogger(JPrincipal.class);
    
    private char password[];
    
    /**
     * Creates new form JPrincipal
     */
    public JPrincipal() {
        initComponents();
    }
    
    public JPrincipal(char password[]) {
        initComponents();
        this.password=password;
        if(!lecture_fichier())
        {
            logger.error("Erreur pour décrypter les fichiers au démarrage");
            erreur("Erreur pour accéder aux fichiers");
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Quitter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Sauver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Réinitialise");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Sauve / change clef");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("<");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jButton6.setText(">");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Traitement tr;
        String s,s2;
        s=jTextArea1.getText();
        try{
            tr=new Traitement();

            tr.load_keystore(password);

            tr.enregistre(s,password);

            s2=tr.lecture(password);
            //System.out.println("s="+s+"!");
            //System.out.println("s2="+s2+"!");
            if(!s.equals(s2))
            {
                erreur("Erreur pour relire le fichier !");
            }
        } catch (KeyStoreHashException | DecoderException | DataLengthException | InvalidCipherTextException | GeneralSecurityException | IOException ex) {
            logger.error(ex.getLocalizedMessage(), ex);
            erreur("Erreur:"+ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Traitement tr;
        try{
            tr=new Traitement();
            tr.initialise_keystore(password);
        } catch (GeneralSecurityException | IOException ex) {
            logger.error(ex.getLocalizedMessage(), ex);
            erreur("Erreur:"+ex.getLocalizedMessage());
        }finally{
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Traitement tr;
        String s,s2;
        char pwd[];
        s=jTextArea1.getText();
        
        pwd=new_password();
        if(pwd!=null&&pwd.length>0)
        {
            try{
                tr=new Traitement();

                tr.enregistre_changement_clef(s, pwd);

                /*tr.load_keystore(password);

                tr.enregistre(s);*/

                s2=tr.lecture(pwd);
                //System.out.println("s="+s+"!");
                //System.out.println("s2="+s2+"!");
                if(s.equals(s2))
                {
                    password=pwd;
                }
                else
                {
                    erreur("Impossible de lire le fichier !");
                }
            } catch (KeyStoreHashException | DecoderException | DataLengthException | InvalidCipherTextException | GeneralSecurityException | IOException ex) {
                logger.error(ex.getLocalizedMessage(), ex);
                erreur("Erreur:"+ex.getLocalizedMessage());
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        recherche(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        recherche(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        if(2==3-1)
        {
            throw new IllegalArgumentException();
        }
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         * /
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JPrincipal().setVisible(true);
            }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private boolean lecture_fichier() {
        Traitement tr;
        String s;
        try{
            tr=new Traitement();
            tr.load_keystore(password);
            s=tr.lecture(password);
            if(s!=null)
            {
                jTextArea1.setText(s);
            }
        } catch (KeyStoreHashException|DecoderException | DataLengthException | InvalidCipherTextException | GeneralSecurityException | IOException ex) {
            logger.error(ex.getLocalizedMessage(), ex);
            erreur("Erreur:"+ex.getLocalizedMessage());
            return false;
        }
        return true;
    }

    private char[] new_password() {
        char[] res=null,res1,res2;
        JPasswordField pf = new JPasswordField();
        int okCxl = JOptionPane.showConfirmDialog(this, pf, "Saisissez le nouveau mot de passe", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (okCxl == JOptionPane.OK_OPTION) {
            //String password = new String(pf.getPassword());
            //System.err.println("You entered: " + password);
            res1=pf.getPassword();
	    if(res1==null||res1.length<10)
	    {
		erreur("Mot de passe incorrecte");
	    }
	    else
	    {
		JPasswordField pf2 = new JPasswordField();
		okCxl = JOptionPane.showConfirmDialog(this, pf2, "Resaisissez le nouveau mot de passe une seconde fois", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

		if (okCxl == JOptionPane.OK_OPTION) {
		    res2=pf.getPassword();
		    if(res2==null||res2.length<10||res2.length!=res1.length
			||!Tools.egaux(res1,res2))
		    {
			erreur("Mot de passe incorrecte");
		    }
		    else
		    {
			res=res1;
		    }
		}
	    }
	}
        return res;
    }
    
    private void erreur(String msg){
        alerte("Erreur",msg,JOptionPane.ERROR_MESSAGE);
    }
    
    private void alerte(String titre,String msg,int option){
        JOptionPane.showMessageDialog(this, msg,titre,option);
    }
    
    private void recherche(boolean suivant)
    {
        final String str_recherche,str_contenu;
        final int pos_debut,pos_traitement,pos_traitement_fin,new_pos;
        int pos,i;
        str_recherche=jTextField1.getText();
        str_contenu=jTextArea1.getText();
        if(str_recherche!=null&&!str_recherche.trim().isEmpty())
        {
            pos=jTextArea1.getCaretPosition();
            pos_debut=pos;
            if(suivant)
            {
                pos=str_contenu.indexOf(str_recherche, pos_debut);
                new_pos=pos+str_recherche.length();
            }
            else
            {
                pos=str_contenu.lastIndexOf(str_recherche, pos_debut);
                new_pos=Math.max(0, pos-1);
            }
            if(pos!=-1)
            {
                pos_traitement=pos;
                pos_traitement_fin=pos_traitement+str_recherche.length();
                SwingUtilities.invokeLater(
                        new Runnable() {

                        @Override
                        public void run() {
                                    if(false){
                                        jTextArea1.setCaretPosition(pos_traitement_fin);
                                    jTextArea1.moveCaretPosition(pos_traitement);
                                    }
                                    else{
                                        Highlighter h = jTextArea1.getHighlighter();
                                        h.removeAllHighlights();
                                        try {
                                            h.addHighlight(pos_traitement ,
                                                pos_traitement_fin,
                                                DefaultHighlighter.DefaultPainter);
                                        } catch (BadLocationException ex) {
                                            logger.error("Erreur:"+ex.getLocalizedMessage(), ex);
                                        }
                                    }
                                    jTextArea1.setCaretPosition(new_pos);
                                }
                            }
                        );
                
            }
            else
            {
                erreur("Impossible de trouver le texte : "+str_recherche);
            }
            logger.info("pos="+pos);
        }
    }
}
